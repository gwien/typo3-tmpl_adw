plugin.tx_solr {
	suggest = 1
	addDefaultCss = 0
	templateFile {
		results = EXT:tmpl_adw/Resources/Private/Templates/Extensions/Solr/results.htm
		pagebrowser = EXT:tmpl_adw/Resources/Private/Templates/Extensions/Solr/pagebrowser.htm
	}
	logging {
		query {
			filters = 1
			searchWords = 1
			queryString = 1
			rawPost = 1
			rawGet = 1
		}
		indexing = 1
		indexing {
			indexQueuePageIndexerGetData = 1
		}
		}
}

plugin.tx_solr.search {
	highlighting = 1
	results.resultsPerPageSwitchOptions = 10, 25, 50
	lastSearches = 0
}

plugin.tx_solr.index {
	enablePageIndexing = 0
	enableIndexingWhileBeUserLoggedIn = 0
	enableFileIndexing = 0
}


# index pages

plugin.tx_solr.index.queue.pages = 1

# index tt_address and send search results to generic details page
plugin.tx_solr.index.queue.member = 1
plugin.tx_solr.index.queue.member {
	table = tt_address
	fields {
		content = TEXT
		content {
			field = description
			stripHtml = 1
    	}
		uid = uid
		title = name
		url = TEXT
		url {
			typolink {
				parameter = {$solr.index.member.target}
				useCacheHash = 1
				additionalParams = &tx_wtdirectory_pi1[show]={field:uid}
				additionalParams.insertData = 1
				returnLast = url
			}
		}
	}
}


# index tt_news and send search results to generic details page

plugin.tx_solr.index.queue.news = 1
plugin.tx_solr.index.queue.news {
	table = tt_news
	fields {
		title = title
		author = author
		changed = tstamp
		content = TEXT
		content {
			field = bodytext
			stripHtml = 1
		}
		uid = uid
		url = TEXT
		url {
			typolink {
				parameter = {$solr.index.news.target}
				useCacheHash = 1
				additionalParams = &tx_ttnews[tt_news]={field:uid}
				additionalParams.insertData = 1
				returnLast = url
			}
		}
	}
}