// Pull the plugin from Maven Central
buildscript {
	repositories {
		mavenCentral()
		maven { url 'http://dl.bintray.com/robfletcher/gradle-plugins' }
		jcenter()
	}
	dependencies {
		classpath 'be.filipblondeel.gradle:gradle-gulp-plugin:0.1'
	}
}

loadConfiguration()

def loadConfiguration() {
	defaultTasks = ['cleanUp', 'node', 'npmInstall', 'installGulp', 'gulp_compile', 'prepare']
}

// Invoke the plugin
apply plugin: 'gulp'

project.ext.set("jsSrcDir", "Resources/Private/JavaScript")
project.ext.set("jsDestDir", "Resources/Public/JavaScript")
project.ext.set("cssSrcDir", "Resources/Public/Css")
project.ext.set("cssSrcDir", "Resources/Public/Css")

node {
	// Version of node to use.
	version = '0.10.35'

	// Enabled the automatic download. False is the default (for now).
	download = true
}

project.ext.set(
	'libraryVersions', [
	fontAwesome: '4.2.0',
	twbs       : '3.3.2'
])

FileCollection buildDirectories = files([
	'Build/logs',
	'Build/lib',
	'Build/pdepend',
	'Build/tmp/FontAwesome',
	'Build/tmp/twbs'
])

FileCollection generatedFiles = files([
	cssSrcDir + '/adw.css',
	jsDestDir + '/production.js',
	jsDestDir + '/production.min.js',
	jsDestDir + '/production.sourcemap.json'
])


task wrapper(type: Wrapper) {
	gradleVersion = '2.2'
}


repositories {
	mavenCentral()
}

task cleanUp << {
	description 'Cleanup build artifacts'
	buildDirectories.each { File file ->
		delete file
	}

	generatedFiles.each { File file ->
		delete file
	}
}

task prepare << {
	description 'Prepare for build'


	buildDirectories.each { File file ->
		file.mkdirs()
	}
}

gulp_build.dependsOn 'installGulp'
gulp_build.dependsOn 'npmInstall'
